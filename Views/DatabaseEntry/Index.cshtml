@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Anime Oshirase Admin</title>
    <script src="~/js/angular.js"></script>
    <link rel="stylesheet" href="assets/demo.css">
    <link rel="stylesheet" href="~/assets/entry-form.css" />
    @*<link rel="stylesheet" href="assets/form-basic.css">*@
    <link rel="stylesheet" href="~/assets/form-search.css">
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script defer src="https://use.fontawesome.com/releases/v5.0.9/js/all.js" integrity="sha384-8iPTk2s/jMVj81dnzb/iFR2sdA7u06vHJyyLlAd4snFpCl/SnyUjRrbdJsw1pGIl" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="~/assets/user-login.css" />
    <link rel="stylesheet" href="~/assets/loading-screen.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css">
    <link href="~/assets/all.css" rel="stylesheet" />
    <script src="~/js/entryFormScript.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/additional-methods.min.js"></script>
    <script src="~/js/JsObjects.js"></script>
    <script src="~/js/databaseentry.js"></script>
    <script src="~/js/all.js"></script>
</head>
<body>
    <header>
        <div>
            @{
                if (User.Identity.IsAuthenticated)
                {
                    <div class=" user-lablel">
                        <span>Anime Oshirase DataBase Entry   </span>
                        <div class="user-labels-top-right user-parent">
                            <div id="userProfile"><i class="fas fa-user-plus"></i></div>

                        </div>
                    </div>
                    <div class="user-pull-out" id="signOut">
                        <ul>
                            <li class=" "><a href="/NewEntry/Dbeditor">Check DataBase</a></li>
                            <li class=" "> <a href="/SignOut">Logout</a></li>
                        </ul>
                    </div>
                }
            }
        </div>

    </header>


    @*<li><a href="/newentry" class="active">Add Entry</a></li>
        <li><a href="form-register.html">Register</a></li>
        <li><a href="form-login.html">Login</a></li>
        <li><a href="form-mini.html">Mini</a></li>
        <li><a href="form-labels-on-top.html">Labels on Top</a></li>
        <li><a href="form-validation.html">Validation</a></li>*@

    <div class="main-content" ng-app="appMain" ng-controller="httpappController">
        <!-- You only need this form and the form-basic.css -->
        <div class="form-basic">
            <div class="container-border search-conatiner" style="text-align: center!important;">
                <div>
                    <input type="search" name="search" placeholder="Anime movie i am looking for.." ng-model="movieQuery">
                    <button class="btn btn-primary" type="button" ng-click="getMovie()" style="margin: 0!important; display: inline;">Search</button>
                </div>
            </div>
        </div>
        <h1>Movie Selection</h1>
        <form id="databaseform" class="form-basic" method="post" action="#">
            <div class="container-border form-title-row">
                <div id="media-selection-container" class="media-selection-container">
                </div>
            </div>
            <div class="form-title-row">
                <div> <h1>Anime Oshirase Data Entry</h1></div>
            </div>
            <div class="container-border">
                <div class="entry-form-row">
                    <div>
                        <label>Movie Title</label>
                    </div>
                    <input readonly="readonly" type="text" name="name" ng-model="movieTitle" required>
                </div>
                <div class="entry-form-row">
                    <div><label>Movie Id</label></div>
                    <input readonly="readonly" type="text" name="movieId" ng-model="movieId" required>
                </div>
                <div class="entry-form-row">
                    <div> <label>Poster Path</label></div>
                    <input readonly="readonly" type="text" name="posterpath" ng-model="posterPath" required>
                </div>
                <div class="entry-form-row">
                    <div> <label>Backdrop Path</label></div>
                    <input readonly="readonly" type="text" name="backdroppath" ng-model="backdropPath" required>
                </div>
                <div class="entry-form-row">
                    <div>    <label>Offers English Dubbed</label></div>
                    <select id="englishdubbed" ng-click="englishDubbed()" name="dropdown" required>
                        <option>Yes</option>
                        <option>No</option>
                    </select>
                </div>
                <div class="entry-form-row">
                    <div>  <label>Offers English Subbed</label></div>
                    <select id="englishSubbed" ng-click="englishSubbed()" name="dropdown" required>
                        <option>Yes</option>
                        <option>No</option>
                    </select>
                </div>
            </div>
            @* --------------------------------------------Title 2--------------------------------------------------- *@
            <div class="form-title-row">
                <div> <h1>Anime Oshirase Data Entry</h1></div>
            </div>
            <div class="container-border">
                <!--DATE PICKER-------------------------------------------------------------------------->
                <div class="entry-form-row">
                    <div> <label>Pick Showing Dates</label></div>
                    <input type="text" name="datepicker" id="datepicker" ng-model="date" required />
                </div>
                <div class="entry-form-row">
                    <div ng-repeat="item in savedMovieDates" ng-click="removeTime($event)">
                        <span id="playingTimes" style="display:inline">
                            {{item}}
                            <span>
                                <i class="far fa-minus-square"></i>
                            </span>
                        </span>
                    </div>
                </div>
                <div class="entry-form-row">
                    <div> <label>Pick Showing Start Date</label></div>
                    <input type="text" name="showingstartdatepicker" id="showingstartdatepicker" ng-model="showingStartDate" />
                </div>
                <!----date picker end----------------------------------------------------------------------->
                <div class="entry-form-row">
                    <div>  <label>YouTube Trailer ID</label></div>
                    <input type="text" id="youtubeid" ng-model="youTubeID" required />
                </div>
                <div class="entry-form-row">
                    <div>  <label>Theater Url</label></div>
                    <input type="url" id="theaterUrl" ng-model="theaterUrl" required />
                </div>
                <div class="entry-form-row">
                    <button id="checkMovieButton" class="btn btn-primary" type="button">Check Que</button>
                    <button id="addmoviebutton" class="btn btn-primary" type="button">Add To Que</button>
                </div>
                @*<div class="entry-form-row">
                        <button class="btn btn-primary" type="submit">Submit Form</button>
                    </div>*@
            </div>
        </form>
    </div>
    <div id="saved-movie-item-container" class="saved-movie-item-container">
        <div id="closeMovieContainer"><button id="closeButton" class="btn">Close</button></div>
    </div>
    <div id="loadingScreen" class="loading loading-hidden ">
        <div id="icon-spinner"><i class="fas fa-spinner-third"></i></div>
        <div>Loading....</div>
    </div>
</body>
</html>
<script>

    function showLoading() {
        var notvisible = $("#loadingScreen").hasClass("loading-hidden");
        console.log(notvisible);
        if (notvisible == true)
            $("#loadingScreen").removeClass("loading-hidden");

    }
    function closeLoading() {
        var notvisible = $("#loadingScreen").hasClass("loading-hidden");
        if (!notvisible)
            $("#loadingScreen").addClass("loading-hidden");
    }
    $("#userProfile").click(() => {

        var animationSettings = { width: "toggle" }
        $("#signOut").animate(animationSettings, 500, () => { console.log(animationSettings) })
    })

    var savedDates = ["12-12-25"];

    var app = angular.module("appMain", []);
    app.controller("httpappController", ($scope, $http) => {

        $scope.movieTitle;
        $scope.movieId;
        $scope.movie;
        $scope.date;
        $scope.savedMovieDates = [];
        $scope.showingStartDate;
        $scope.youTubeID;
        $scope.posterPath;
        $scope.backdropPath;
        $scope.overview;
        $scope.theaterUrl;
        $scope.movieQuery;
        var isEnglishDubbed = "Yes";
        var isEnglishSubbed = "Yes";

        $scope.englishDubbed = function (value) {
            let select = document.getElementById("englishdubbed");
            let selectedIndex = select.options.selectedIndex;
            isEnglishDubbed = select.options[selectedIndex].innerText;
            console.log(isEnglishDubbed);
        };
        $scope.englishSubbed = function (value) {
            let select = document.getElementById("englishSubbed");
            let selectedIndex = select.options.selectedIndex;
            isEnglishSubbed = select.options[selectedIndex].innerText;
            console.log(isEnglishSubbed);
        };
        $(function () {
            $("#datepicker").datepicker({
                onSelect: (dateText) => {

                    $scope.savedMovieDates.push(dateText);
                    $scope.$digest();
                }
            });
            $("#showingstartdatepicker").datepicker({
                onSelect: (dateText) => {
                    $scope.showingStartDate = dateText;

                }
            });
        });
        var movieDataforDb = {

            "title": $scope.movieTitle,
            "id": 0,
            "offeringSubbed": isEnglishSubbed,
            "offeringDubbed": isEnglishDubbed,
            "movieDates": $scope.savedMovieDates,
            "theatricalReleaseStartDate": $scope.showingStartDate,
            "youTube": $scope.youTubeID,
            "poster_path": $scope.posterPath,
            "backdrop_path": $scope.backdropPath,
            "overview": "",
            "theaterUrl": ""

        }

        var imageDiv = document.getElementById("media-selection-container");

        function init() {


            var xhrInfo = {
                "method": "GET",
                "url": "https://api.themoviedb.org/3/search/movie",
                "params": {
                    query: "dragonball z",
                    api_key: "88c90f084b54e6c2a73b7295abdf08c0",
                    include_adult: "false",
                    append_to_response: "videos,images"
                }
            }
            var moviesData = [{}];
            function movieSelected(e) {
                var title = e.target.attributes[3].value

                moviesData.forEach((item) => {

                    if (item.title === title) {
                        $scope.movieTitle = item.title;
                        $scope.movieId = item.id;
                        $scope.posterPath = item.poster_path;
                        $scope.backdropPath = item.backdrop_path;
                        $scope.overview = item.overview;
                        $scope.$apply()

                        //$(e).addClass("media-selection-container-selecetd");
                    }
                })
            }
            $http(xhrInfo).then(
                (success) => {



                    success.data.results.forEach((item) => {

                        var img = document.createElement("img");
                        var imgUrl = item.poster_path;
                        var baseImageUrl = "https://image.tmdb.org/t/p/w200";
                        img.className += "responsive";
                        img.setAttribute("src", baseImageUrl + imgUrl);
                        img.setAttribute("alt", item.title);
                        img.setAttribute("data-title", item.title);
                        img.addEventListener("click", movieSelected);
                        imageDiv.appendChild(img);
                        moviesData.push(item);

                    })

                },
                (error) => {

                    console.log("fail"); console.log(error);
                    window.confirm("no movie found!\nenter valid movie title");
                });

        }
        init();

        //xhr call to moviedb api
        $scope.getMovie = function () {

            var images = Array.from(document.getElementById("media-selection-container").getElementsByTagName("img"));

            images.forEach((item) => {
                console.log(item);
                document.getElementById("media-selection-container").removeChild(item)
            });

            var xhrInfo = {
                "method": "GET",
                "url": "https://api.themoviedb.org/3/search/movie",
                "params": {
                    query: $scope.movieQuery,
                    api_key: "88c90f084b54e6c2a73b7295abdf08c0",
                    include_adult: "false",
                    append_to_response: "videos,images"
                }
            }
            var moviesData = [{}];
            function movieSelected(e) {
                var title = e.target.attributes[3].value

                moviesData.forEach((item) => {
                    //get selected movie from array from movieDb api and populate the inputs
                    if (item.title === title) {
                        $scope.movieTitle = item.title;
                        $scope.movieId = item.id;
                        $scope.posterPath = item.poster_path;
                        $scope.backdropPath = item.backdrop_path;
                        $scope.overview = item.overview;
                        $scope.$apply()

                    }
                })
            }
            $http(xhrInfo).then(
                (success) => {

                    success.data.results.forEach((item) => {

                        var img = document.createElement("img");
                        var imgUrl = item.poster_path;
                        var baseImageUrl = "https://image.tmdb.org/t/p/w200";
                        img.className += "responsive";
                        img.setAttribute("src", baseImageUrl + imgUrl);
                        img.setAttribute("alt", item.title);
                        img.setAttribute("data-title", item.title);
                        img.addEventListener("click", movieSelected);
                        imageDiv.appendChild(img);
                        moviesData.push(item);


                    })

                },
                (error) => {

                    console.log("fail"); console.log(error);
                    window.confirm("no movie found!\nenter valid movie title");
                });

        }
        $scope.removeTime = function (event) {
            let timeSelected = event.target.parentElement.parentElement.innerText;
            let selectedIndex = $scope.savedMovieDates.findIndex((value) => { return value === timeSelected });
            console.log(selectedIndex);
            var a = []
            $scope.savedMovieDates.splice(selectedIndex, 1);
        }


        $('#databaseform').on('submit', function () {
            var This = $(this);
            if ($(This).valid()) {
                showLoading();
                movieDataforDb["title"] = $scope.movieTitle
                movieDataforDb["id"] = parseInt($scope.movieId)
                movieDataforDb["offeringSubbed"] = isEnglishSubbed
                movieDataforDb["offeringDubbed"] = isEnglishDubbed
                movieDataforDb["movieDates"] = $scope.savedMovieDates
                movieDataforDb["theatricalReleaseStartDate"] = $scope.showingStartDate;
                movieDataforDb["youTube"] = $scope.youTubeID
                movieDataforDb["poster_path"] = $scope.posterPath
                movieDataforDb["backdrop_path"] = $scope.backdropPath
                movieDataforDb["overview"] = $scope.overview
                movieDataforDb["theaterUrl"] = $scope.theaterUrl
                var xhrInfo = {
                    "method": "POST",
                    "url": "http://apianimearato.azurewebsites.net/NewEntry/post",
                    "data": movieDataforDb,
                    headers: {
                        'Content-Type': "application/json"
                    }
                }


                console.log($scope.showingStartDate);
                $http(xhrInfo).then((success) => { console.log(success); closeLoading(); confirm("Update succeeded") }, (error) => { closeLoading(); confirm("Update failed"); console.log(error) });
                return false;

            }
            return false;
        });
        //$('#databaseform').validate({
        //    onfocusout: function (element) {
        //        $(element).valid();
        //    },
        //    rules: {
        //        name: { required: true },
        //        movieId: { required: true },
        //        dropdown: { required: true },
        //        showingstartdatepicker: { required: true },
        //        youtubeid: { required: true },
        //        datepicker: { required: true },
        //        theaterUrl: { required: true }
        //    }
        //});
        var addMovieButton = document.getElementById("addmoviebutton");
        var checkMovieButton = document.getElementById("checkMovieButton");
        var closeMovieContainerButton = document.getElementById("closeButton");

        var movieObjectClass = new savedMovieItem();
        addMovieButton.addEventListener("click", () => {
            movieDataforDb["title"] = $scope.movieTitle
            movieDataforDb["id"] = parseInt($scope.movieId)
            movieDataforDb["offeringSubbed"] = isEnglishSubbed
            movieDataforDb["offeringDubbed"] = isEnglishDubbed
            movieDataforDb["movieDates"] = $scope.savedMovieDates
            movieDataforDb["theatricalReleaseStartDate"] = $scope.showingStartDate;
            movieDataforDb["youTube"] = $scope.youTubeID
            movieDataforDb["poster_path"] = $scope.posterPath
            movieDataforDb["backdrop_path"] = $scope.backdropPath
            movieDataforDb["overview"] = $scope.overview
            movieDataforDb["theaterUrl"] = $scope.theaterUrl
            movieObjectClass.setDomItem(movieDataforDb)
            alert("Movie Added Successfully");

        })

        $("div:not(#saved-movie-item-container)").on("click", () => {
            var movieContainerOpen = $("#saved-movie-item-container").hasClass("Open");
            var animimating = $("#saved-movie-item-container").is(':animated');
            if (!animimating) {
                $("#saved-movie-item-container").removeClass("Open");
                $('#saved-movie-item-container').animate({ top: "200%", easing: "linear" }, 1000, () => {
                    $('#saved-movie-item-container').hide();
                })
            }
        })
        checkMovieButton.addEventListener("click", () => { //open saved movies
            $("#saved-movie-item-container").addClass("Open");
            $('#saved-movie-item-container').show();
            $('#saved-movie-item-container').animate({ top: "50%", easing: "linear" }, 1000, () => {

            })
        })
        closeMovieContainerButton.addEventListener("click", () => {//close saved movies
            $("#saved-movie-item-container").removeClass("Open");
            $("#saved-movie-item-container").on("click", function () {
                console.log("closed")
                $('#saved-movie-item-container').animate({ top: "200%", easing: "linear" }, 1000, () => {
                    $('#saved-movie-item-container').hide();
                })

            });
        });
    })
</script>